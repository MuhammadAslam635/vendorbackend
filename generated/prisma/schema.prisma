// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  VENDOR
  CUSTOMER
  ADMIN
}

enum UserStatus {
  PENDING
  ACTIVE
  SUSPENDED
  BLOCKED
}

model User {
  id                    Int           @id @default(autoincrement())
  name                  String
  email                 String        @unique
  password              String
  email_verification_at DateTime?
  utype                 String        @default("VENDOR")
  status                String        @default("PENDING")
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  vendor                Vendor?
  access_token          AccessToken[]
}

model AccessToken {
  id            Int      @id @default(autoincrement())
  access_token  String   @unique
  refresh_token String?  @unique
  expires_at    DateTime
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([access_token])
}

model Vendor {
  id           Int      @id @default(autoincrement())
  company      String?
  businessName String?
  state        String?
  city         String?
  zipcode      String?
  address      String?
  country      String?
  companyLogo  String?
  profileImg   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
}
