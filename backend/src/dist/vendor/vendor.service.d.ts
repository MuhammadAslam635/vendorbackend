import { ConfigService } from '@nestjs/config';
import { CreateVendorProfileDto } from './dto/create-vendor-profile.dto';
import { UpdateVendorProfileDto } from './dto/update-vendor-profile.dto';
import { PrismaService } from '../prisma/prisma.service';
import { SearchVendorProfileDto } from './dto/search-vendor-profile.dto';
export declare class VendorService {
    private prisma;
    private configService;
    constructor(prisma: PrismaService, configService: ConfigService);
    private readonly uploadDir;
    private initializeUploadDirectories;
    private saveFile;
    createProfile(userId: number, createVendorProfileDto: CreateVendorProfileDto, companyLogoPath?: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    }>;
    updateProfile(updateVendorProfileDto: UpdateVendorProfileDto, id: string, companyLogoPath?: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    }>;
    findByUserId(userId: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    }[]>;
    searchVendors(searchDto: SearchVendorProfileDto): Promise<({
        user: {
            name: string;
            email: string;
            status: string;
        };
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    })[]>;
    getAllVendors(): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    }[]>;
    getProfile(id: string): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        company: string | null;
        state: string | null;
        city: string | null;
        zipcode: string | null;
        address: string | null;
        country: string | null;
        companyLogo: string | null;
        fb: string | null;
        ln: string | null;
        in: string | null;
        yt: string | null;
        webUrl: string | null;
        userId: number;
    } | null>;
}
