import { UserService } from './user.service';
import { UpdateStatusDto } from './dto/update-status.dto';
import { MailerService } from '@nestjs-modules/mailer';
export declare class UserController {
    private userService;
    private mailService;
    constructor(userService: UserService, mailService: MailerService);
    getProfile(req: any): Promise<{
        profiles: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            company: string | null;
            state: string | null;
            city: string | null;
            zipcode: string | null;
            address: string | null;
            country: string | null;
            companyLogo: string | null;
            fb: string | null;
            ln: string | null;
            in: string | null;
            yt: string | null;
            webUrl: string | null;
            userId: number;
        }[];
        subscribe_packages: {
            id: number;
            status: string;
            createdAt: Date;
            updatedAt: Date;
            userId: number;
            startDate: Date;
            endDate: Date;
            packageId: number;
        }[];
        id: number;
        name: string;
        email: string;
        email_verification_at: Date | null;
        utype: string;
        status: string;
        packageActive: string;
        totalProfiles: number | null;
        activeProfiles: number | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    getAllUsers(): Promise<({
        profiles: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            company: string | null;
            state: string | null;
            city: string | null;
            zipcode: string | null;
            address: string | null;
            country: string | null;
            companyLogo: string | null;
            fb: string | null;
            ln: string | null;
            in: string | null;
            yt: string | null;
            webUrl: string | null;
            userId: number;
        }[];
    } & {
        id: number;
        name: string;
        email: string;
        password: string;
        email_verification_at: Date | null;
        utype: string;
        status: string;
        packageActive: string;
        totalProfiles: number | null;
        activeProfiles: number | null;
        createdAt: Date;
        updatedAt: Date;
    })[]>;
    updateStatus(id: string, updateStatusDto: UpdateStatusDto): Promise<{
        profiles: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            company: string | null;
            state: string | null;
            city: string | null;
            zipcode: string | null;
            address: string | null;
            country: string | null;
            companyLogo: string | null;
            fb: string | null;
            ln: string | null;
            in: string | null;
            yt: string | null;
            webUrl: string | null;
            userId: number;
        }[];
    } & {
        id: number;
        name: string;
        email: string;
        password: string;
        email_verification_at: Date | null;
        utype: string;
        status: string;
        packageActive: string;
        totalProfiles: number | null;
        activeProfiles: number | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    deleteUser(id: string): Promise<{
        id: number;
        name: string;
        email: string;
        password: string;
        email_verification_at: Date | null;
        utype: string;
        status: string;
        packageActive: string;
        totalProfiles: number | null;
        activeProfiles: number | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    getUser(id: string): Promise<{
        profiles: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            company: string | null;
            state: string | null;
            city: string | null;
            zipcode: string | null;
            address: string | null;
            country: string | null;
            companyLogo: string | null;
            fb: string | null;
            ln: string | null;
            in: string | null;
            yt: string | null;
            webUrl: string | null;
            userId: number;
        }[];
        subscribe_packages: {
            id: number;
            status: string;
            createdAt: Date;
            updatedAt: Date;
            userId: number;
            startDate: Date;
            endDate: Date;
            packageId: number;
        }[];
    } & {
        id: number;
        name: string;
        email: string;
        password: string;
        email_verification_at: Date | null;
        utype: string;
        status: string;
        packageActive: string;
        totalProfiles: number | null;
        activeProfiles: number | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    testActivationEmail(): Promise<any>;
}
